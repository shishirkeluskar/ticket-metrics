syntax = "proto3";

package ticketmetrics;

option java_multiple_files = true;
option java_package = "com.shishir.ticketmetrics.grpc";
option java_outer_classname = "TicketMetricsProto";

import "google/protobuf/timestamp.proto";

//message DateRange {
//  string start_date = 1; // ISO 8601 format: YYYY-MM-DD
//  string end_date = 2;
//}
//
//message ScoreEntry {
//  string date = 1; // Daily or weekly
//  double score = 2; // Percentage (0â€“100)
//}
//
//message CategoryScore {
//  string category = 1;
//  int32 ratings = 2;
//  repeated ScoreEntry score = 3;
//  double overall_score = 4;
//}
//
//// -------- 1. Category Scores Over Time --------
//
//message CategoryScoresRequest {
//  DateRange range = 1;
//}
//
//message CategoryScoresResponse {
//  repeated CategoryScore categories = 1;
//}
//
//// -------- 2. Ticket Scores Within Period --------
//
//message TicketScoresRequest {
//  DateRange range = 1;
//}
//
//message TicketCategoryScore {
//  string category = 1;
//  double score = 2;
//}
//
//message TicketScoreRow {
//  int64 ticket_id = 1;
//  repeated TicketCategoryScore scores = 2;
//}
//
//message TicketScoresResponse {
//  repeated TicketScoreRow results = 1;
//}
//
//// -------- 3. Overall Quality Score --------
//
//message OverallScoreRequest {
//  DateRange range = 1;
//}
//
//message OverallScoreResponse {
//  double score = 1;
//}
//
//
//// -------- 4. Period-over-Period Comparison --------
//
//message ScoreChangeRequest {
//  DateRange current = 1;
//  DateRange previous = 2;
//}
//
//message ScoreChangeResponse {
//  double current_score = 1;
//  double previous_score = 2;
//  double change = 3; // Positive or negative %
//}

// -------- 1. A ticket score --------

message GetTicketScoreRequest {
  int32 ticket_id = 1;
}

message GetTicketScoreResponse {
  double score = 1;
}

// -------- 2. Category Scores Over Time --------

message CategoryScoreRequest {
//  google.protobuf.Timestamp start = 1;
//  google.protobuf.Timestamp end = 2;
  string startDate = 1; // ISO 8601 string
  string endDate = 2;
}

message CategoryScoreResponse {
  repeated CategoryScore scores = 1;
}

message CategoryScore {
  int32 category_id = 1;
  int32 total_ratings = 2;
  double average_score = 3; // Overall average for the period
  repeated ScoreByDate timeline = 4;
}

message ScoreByDate {
//  google.protobuf.Timestamp date = 1;
  string date = 1; // ISO 8601 UTC format
  double score = 2;
}


// -------- gRPC Service --------

service TicketMetricsService {
  rpc GetTicketScore(GetTicketScoreRequest) returns (GetTicketScoreResponse);
  rpc GetCategoryScoreOverTime (CategoryScoreRequest) returns (CategoryScoreResponse);

//  rpc GetCategoryScores(CategoryScoresRequest) returns (CategoryScoresResponse);
//  rpc GetTicketScores(TicketScoresRequest) returns (TicketScoresResponse);
//  rpc GetOverallScore(OverallScoreRequest) returns (OverallScoreResponse);
//  rpc GetScoreChange(ScoreChangeRequest) returns (ScoreChangeResponse);
}